version: "3.9"
services:
  sql:
    image: postgres:15.1-alpine
    container_name: ${DB_TEST_NAME}
    environment:
      POSTGRES_DB: ${DB_TEST_NAME}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_TEST_NAME}"]
      interval: 3s
      timeout: 9s
      retries: 3
    ports:
      - "${DB_PORT}:5432"
    networks:
      - test_network

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      DB_NAME: ${DB_TEST_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8000:8000"
    entrypoint: sh -c "pytest; exit"
    networks:
      - test_network
    depends_on:
      sql:
        condition: service_healthy

networks:
  test_network:
    name: test_network
